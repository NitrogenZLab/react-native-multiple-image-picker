#
# MultipleImagePicker+autolinking.cmake
# This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
# https://github.com/mrousavy/nitro
# Copyright Â© 2025 Marc Rousavy @ Margelo
#

# This is a CMake file that adds all files generated by Nitrogen
# to the current CMake project.
#
# To use it, add this to your CMakeLists.txt:
# ```cmake
# include(${CMAKE_SOURCE_DIR}/../nitrogen/generated/android/MultipleImagePicker+autolinking.cmake)
# ```

# Add all headers that were generated by Nitrogen
include_directories(
  "../nitrogen/generated/shared/c++"
  "../nitrogen/generated/android/c++"
  "../nitrogen/generated/android/"
)

# Add all .cpp sources that were generated by Nitrogen
target_sources(
  # CMake project name (Android C++ library name)
  MultipleImagePicker PRIVATE
  # Autolinking Setup
  ../nitrogen/generated/android/MultipleImagePickerOnLoad.cpp
  # Shared Nitrogen C++ sources
  ../nitrogen/generated/shared/c++/HybridMultipleImagePickerSpec.cpp
  # Android-specific Nitrogen C++ sources
  ../nitrogen/generated/android/c++/JHybridMultipleImagePickerSpec.cpp
)

# Define a flag to check if we are building properly
add_definitions(-DBUILDING_MULTIPLEIMAGEPICKER_WITH_GENERATED_CMAKE_PROJECT)

# From node_modules/react-native/ReactAndroid/cmake-utils/folly-flags.cmake
# Used in node_modules/react-native/ReactAndroid/cmake-utils/ReactNative-application.cmake
 target_compile_definitions(
  MultipleImagePicker PRIVATE
  -DFOLLY_NO_CONFIG=1
  -DFOLLY_HAVE_CLOCK_GETTIME=1
  -DFOLLY_USE_LIBCPP=1
  -DFOLLY_CFG_NO_COROUTINES=1
  -DFOLLY_MOBILE=1
  -DFOLLY_HAVE_RECVMMSG=1
  -DFOLLY_HAVE_PTHREAD=1
  # Once we target android-23 above, we can comment
  # the following line. NDK uses GNU style stderror_r() after API 23.
  -DFOLLY_HAVE_XSI_STRERROR_R=1
)

# Add all libraries required by the generated specs
find_package(fbjni REQUIRED) # <-- Used for communication between Java <-> C++
find_package(ReactAndroid REQUIRED) # <-- Used to set up React Native bindings (e.g. CallInvoker/TurboModule)

# FORCE MANUAL NITRO MODULES LINKING - Skip prefab entirely as it's broken
message(STATUS "Forcing manual NitroModules configuration to avoid broken prefab...")
message(STATUS "CMAKE_SOURCE_DIR: ${CMAKE_SOURCE_DIR}")
message(STATUS "ANDROID_ABI: ${ANDROID_ABI}")

# Get the project root from CMAKE_SOURCE_DIR
# MultipleImagePicker is in node_modules/@baronha/react-native-multiple-image-picker/android
# So we need to go up 4 levels to reach the project root
get_filename_component(PROJECT_ROOT "${CMAKE_SOURCE_DIR}/../../../.." ABSOLUTE)
message(STATUS "PROJECT_ROOT: ${PROJECT_ROOT}")

# Find the NitroModules library manually using file(GLOB) for dynamic hash folders
set(NITRO_MODULES_LIB "")

# Search in different build output locations (both debug and release)
file(GLOB NITRO_SEARCH_PATHS
    # Debug build paths
    "${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/intermediates/cmake/debug/obj/${ANDROID_ABI}/libNitroModules.so"
    "${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/intermediates/cxx/Debug/*/obj/${ANDROID_ABI}/libNitroModules.so"
    "${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/intermediates/prefab_package/debug/prefab/modules/NitroModules/libs/android.${ANDROID_ABI}/libNitroModules.so"
    "${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/intermediates/merged_native_libs/debug/mergeDebugNativeLibs/out/lib/${ANDROID_ABI}/libNitroModules.so"
    "${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/intermediates/stripped_native_libs/debug/stripDebugDebugSymbols/out/lib/${ANDROID_ABI}/libNitroModules.so"
    # Release build paths
    "${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/intermediates/cmake/release/obj/${ANDROID_ABI}/libNitroModules.so"
    "${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/intermediates/cxx/Release/*/obj/${ANDROID_ABI}/libNitroModules.so"
    "${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/intermediates/prefab_package/release/prefab/modules/NitroModules/libs/android.${ANDROID_ABI}/libNitroModules.so"
    "${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/intermediates/merged_native_libs/release/mergeReleaseNativeLibs/out/lib/${ANDROID_ABI}/libNitroModules.so"
    "${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/intermediates/stripped_native_libs/release/stripReleaseDebugSymbols/out/lib/${ANDROID_ABI}/libNitroModules.so"
)

# Pick the first available library
foreach(NITRO_PATH ${NITRO_SEARCH_PATHS})
    if(EXISTS "${NITRO_PATH}")
        set(NITRO_MODULES_LIB "${NITRO_PATH}")
        break()
    endif()
endforeach()

if(NITRO_MODULES_LIB)
    message(STATUS "Found NitroModules library at: ${NITRO_MODULES_LIB}")
    
    # Create imported target manually without trying prefab
    add_library(react-native-nitro-modules::NitroModules SHARED IMPORTED)
    set_target_properties(react-native-nitro-modules::NitroModules PROPERTIES
        IMPORTED_LOCATION "${NITRO_MODULES_LIB}"
        IMPORTED_NO_SONAME ON
    )
    
    # Add include directories
    find_path(NITRO_MODULES_INCLUDE_DIR
        NAMES "NitroModules.h" "NitroModules/NitroModules.h"
        PATHS
            "${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/src/main/cpp"
            "${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/headers/nitromodules"
            "${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/intermediates/prefab_package/debug/prefab/modules/NitroModules/include"
            "${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/intermediates/prefab_package/release/prefab/modules/NitroModules/include"
        NO_DEFAULT_PATH
    )
    
    if(NITRO_MODULES_INCLUDE_DIR)
        target_include_directories(react-native-nitro-modules::NitroModules INTERFACE "${NITRO_MODULES_INCLUDE_DIR}")
        message(STATUS "Found NitroModules headers at: ${NITRO_MODULES_INCLUDE_DIR}")
    else()
        # Fallback to known header location
        target_include_directories(react-native-nitro-modules::NitroModules INTERFACE 
            "${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/headers/nitromodules"
        )
        message(STATUS "Using fallback NitroModules headers location")
    endif()
    
    # Also add headers directly to MultipleImagePicker target
    target_include_directories(MultipleImagePicker PRIVATE
        "${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/headers/nitromodules"
    )
    
    set(react-native-nitro-modules_FOUND TRUE)
else()
    message(FATAL_ERROR "Could not find NitroModules library. Please ensure react-native-nitro-modules is built. Searched in:\n  Debug paths:\n    ${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/intermediates/cmake/debug/obj/${ANDROID_ABI}\n    ${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/intermediates/cxx/Debug/*/obj/${ANDROID_ABI}\n    ${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/intermediates/prefab_package/debug/prefab/modules/NitroModules/libs/android.${ANDROID_ABI}\n    ${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/intermediates/merged_native_libs/debug/mergeDebugNativeLibs/out/lib/${ANDROID_ABI}\n    ${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/intermediates/stripped_native_libs/debug/stripDebugDebugSymbols/out/lib/${ANDROID_ABI}\n  Release paths:\n    ${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/intermediates/cmake/release/obj/${ANDROID_ABI}\n    ${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/intermediates/cxx/Release/*/obj/${ANDROID_ABI}\n    ${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/intermediates/prefab_package/release/prefab/modules/NitroModules/libs/android.${ANDROID_ABI}\n    ${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/intermediates/merged_native_libs/release/mergeReleaseNativeLibs/out/lib/${ANDROID_ABI}\n    ${PROJECT_ROOT}/node_modules/react-native-nitro-modules/android/build/intermediates/stripped_native_libs/release/stripReleaseDebugSymbols/out/lib/${ANDROID_ABI}")
endif()

# Link all libraries together
target_link_libraries(
        MultipleImagePicker
        fbjni::fbjni                              # < -- Facebook C++ JNI helpers
        ReactAndroid::jsi                         # < -- RN: JSI
        react-native-nitro-modules::NitroModules  # < -- NitroModules Core :)
        "${NITRO_MODULES_LIB}"                    # < -- Direct path as backup
)

# Link react-native (different prefab between RN 0.75 and RN 0.76)
if(ReactAndroid_VERSION_MINOR GREATER_EQUAL 76)
    target_link_libraries(
        MultipleImagePicker
        ReactAndroid::reactnative                 # <-- RN: Native Modules umbrella prefab
    )
else()
    target_link_libraries(
        MultipleImagePicker
        ReactAndroid::react_nativemodule_core     # <-- RN: TurboModules Core
    )
endif()
