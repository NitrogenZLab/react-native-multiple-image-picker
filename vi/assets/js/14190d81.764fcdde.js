"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[559],{7067:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>d,metadata:()=>o,toc:()=>h});var r=n(4848),a=n(8453),t=n(3554),s=n.n(t);const d={id:"preview",title:"Preview \ud83c\udf91",sidebar_label:"Preview \ud83c\udf91",slug:"/preview"},l=void 0,o={id:"preview",title:"Preview \ud83c\udf91",description:"Overview",source:"@site/docs/PREVIEW.mdx",sourceDirName:".",slug:"/preview",permalink:"/react-native-multiple-image-picker/vi/preview",draft:!1,unlisted:!1,editUrl:"https://github.com/NitrogenZLab/react-native-multiple-image-picker/tree/main/docs/docs/docs/PREVIEW.mdx",tags:[],version:"current",frontMatter:{id:"preview",title:"Preview \ud83c\udf91",sidebar_label:"Preview \ud83c\udf91",slug:"/preview"},sidebar:"multiple-image-picker",previous:{title:"Crop \ud83c\udf55",permalink:"/react-native-multiple-image-picker/vi/crop"},next:{title:"Camera \ud83d\udcf8",permalink:"/react-native-multiple-image-picker/vi/camera"}},c={},h=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"<code>MediaPreview[]</code>",id:"mediapreview",level:2},{value:"<code>index</code>",id:"index",level:2},{value:"<code>previewConfig</code>",id:"previewconfig",level:2},{value:"<code>language</code>",id:"language",level:3},{value:"<code>onLongPress</code>",id:"onlongpress",level:3},{value:"Additional Information",id:"additional-information",level:2}];function p(e){const i={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(i.p,{children:"Preview is a simple image viewer that supports both local and remote media. It allows you to preview images and videos seamlessly."}),"\n",(0,r.jsx)(s(),{playing:!0,controls:!0,width:"100%",height:"100%",url:"https://github.com/user-attachments/assets/92a1c319-ad99-4d24-892c-7cd878787acd"}),"\n",(0,r.jsx)(i.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-typescript",children:"import {\n  openPreview,\n  PreviewConfig,\n} from '@baronha/react-native-multiple-image-picker'\n\nconst previewConfig: PreviewConfig = {\n  language: 'system',\n}\n\nconst media: MediaPreview[] = [\n  // remote image\n  {\n    path: 'https://images.unsplash.com/photo-1733235015085-fc29c17c4a16?w=500',\n    type: 'image',\n  },\n  // local video\n  {\n    path: 'file://Documents/video-sample/mp4',\n    thumbnail:\n      'https://images.unsplash.com/photo-1733889886752-f4599c954608?q=80&w=2574&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\n    type: 'video',\n  },\n  // remote video\n  {\n    path: 'https://cdn.pixabay.com/video/2024/02/09/199958-911694865_large.mp4',\n    type: 'video',\n  },\n]\n\n// call to preview\nopenPreview(media, 2, previewConfig)\n"})}),"\n",(0,r.jsx)(i.h2,{id:"mediapreview",children:(0,r.jsx)(i.code,{children:"MediaPreview[]"})}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"MediaPreview[]"})," is an array of media objects that you want to preview. Each object in the array should have the following properties:",(0,r.jsx)("br",{})]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"NOTE"}),": You can also use ",(0,r.jsx)(i.a,{href:"/result",children:(0,r.jsx)(i.code,{children:"Result[]"})})," from openPicker's return result"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"path"}),": A string representing the URL or file path of the media."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"type"}),": A string indicating the type of media, either ",(0,r.jsx)(i.code,{children:"image"})," or ",(0,r.jsx)(i.code,{children:"video"}),"."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"thumbnail"})," (optional): A string representing the URL of the thumbnail image for videos."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"localIdentifier"})," (optional): A string representing the local identifier for media from device gallery."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"index",children:(0,r.jsx)(i.code,{children:"index"})}),"\n",(0,r.jsxs)(i.p,{children:["default: ",(0,r.jsx)(i.code,{children:"0"})]}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.code,{children:"index"})," parameter in the ",(0,r.jsx)(i.code,{children:"openPreview"})," function specifies the initial media item to display. It is a zero-based index, meaning that ",(0,r.jsx)(i.code,{children:"0"})," will display the first item in the ",(0,r.jsx)(i.code,{children:"MediaPreview"})," array."]}),"\n",(0,r.jsx)(i.h2,{id:"previewconfig",children:(0,r.jsx)(i.code,{children:"previewConfig"})}),"\n",(0,r.jsx)(i.h3,{id:"language",children:(0,r.jsx)(i.a,{href:"/config/#language",children:(0,r.jsx)(i.code,{children:"language"})})}),"\n",(0,r.jsxs)(i.p,{children:["see ",(0,r.jsx)(i.a,{href:"/config/#language",children:(0,r.jsx)(i.code,{children:"language"})})]}),"\n",(0,r.jsx)(i.h3,{id:"onlongpress",children:(0,r.jsx)(i.code,{children:"onLongPress"})}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"onLongPress"})," is a callback function that is called when a long press is detected on the media item. It is a function that takes an index as an argument and returns void."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-typescript",children:"onLongPress: (index: number) => void\n"})}),"\n",(0,r.jsx)(i.h2,{id:"additional-information",children:"Additional Information"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Ensure that the media paths are accessible and correctly formatted."}),"\n",(0,r.jsxs)(i.li,{children:["The ",(0,r.jsx)(i.code,{children:"openPreview"})," function is part of the ",(0,r.jsx)(i.code,{children:"@baronha/react-native-multiple-image-picker"})," package, which should be installed and properly configured in your project."]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["For more detailed information, refer to the ",(0,r.jsx)(i.a,{href:"https://github.com/baronha/react-native-multiple-image-picker",children:"official documentation"}),"."]})]})}function m(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);